<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="logica__do__programa_8h" kind="file" language="C++">
    <compoundname>logica_do_programa.h</compoundname>
    <includes refid="camada__de__dados_8h" local="yes">camada_de_dados.h</includes>
    <includes refid="listas_8h" local="yes">listas.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includedby refid="bot_8h" local="yes">bot.h</includedby>
    <includedby refid="camada__da__interface_8h" local="yes">camada_da_interface.h</includedby>
    <includedby refid="bot_8c" local="yes">bot.c</includedby>
    <includedby refid="logica__do__programa_8c" local="yes">logica_do_programa.c</includedby>
    <includedby refid="main_8c" local="yes">main.c</includedby>
    <incdepgraph>
      <node id="92">
        <label>stdlib.h</label>
      </node>
      <node id="89">
        <label>camada_de_dados.h</label>
        <link refid="camada__de__dados_8h"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>string.h</label>
      </node>
      <node id="88">
        <label>logica_do_programa.h</label>
        <link refid="logica__do__programa_8h"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>listas.h</label>
        <link refid="listas_8h"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="95">
        <label>bot.h</label>
        <link refid="bot_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="96">
        <label>camada_da_interface.h</label>
        <link refid="camada__da__interface_8h"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>logica_do_programa.h</label>
        <link refid="logica__do__programa_8h"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="logica__do__programa_8h_1a37ad1d2bb17af61977ed8489f8005458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int casa_valida</definition>
        <argsstring>(COORDENADA c)</argsstring>
        <name>casa_valida</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que verifica se a casa é valida para jogar. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>1 se válida, 0 caso contrário </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica_do_programa.h" line="24" column="1" bodyfile="logica_do_programa.c" bodystart="3" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="logica__do__programa_8h_1a69a7a211193098fe83cf02f7450bdd85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogada_presa</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>jogada_presa</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que verifica se a peca está presa. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>1 se presa, 0 caso contrário </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica_do_programa.h" line="34" column="1" bodyfile="logica_do_programa.c" bodystart="12" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="logica__do__programa_8h_1aa302374c28d47481589def1bbb75eed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int casa_vencedora</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>casa_vencedora</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que verifica se o jogo acabou. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>1 se o jogo acabou, 0 caso contrário </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica_do_programa.h" line="43" column="1" bodyfile="logica_do_programa.c" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="logica__do__programa_8h_1acd1b2f5c71c17e023af74e3c678029a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogada_e_valida</definition>
        <argsstring>(ESTADO *estado, COORDENADA c)</argsstring>
        <name>jogada_e_valida</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que verifica se uma jogada é possivel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>1 se a jogada for possível, 0 caso contrário </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica_do_programa.h" line="50" column="1" bodyfile="logica_do_programa.c" bodystart="60" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="logica__do__programa_8h_1ab2fb8cd7bf019ed1c45b7987033795dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jogar</definition>
        <argsstring>(ESTADO *estado, COORDENADA c)</argsstring>
        <name>jogar</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que altera o estado do jogo através das coordenadas fornecidas. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica_do_programa.h" line="56" column="1" bodyfile="logica_do_programa.c" bodystart="77" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Definição das funções da componente lógica do jogo </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#ifndef<sp/>_GUIAO5_LOGICA_DO_PROGRAMA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GUIAO5_LOGICA_DO_PROGRAMA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="camada__de__dados_8h" kindref="compound">camada_de_dados.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="listas_8h" kindref="compound">listas.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica__do__programa_8h_1a37ad1d2bb17af61977ed8489f8005458" kindref="member">casa_valida</ref><sp/>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica__do__programa_8h_1a69a7a211193098fe83cf02f7450bdd85" kindref="member">jogada_presa</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica__do__programa_8h_1aa302374c28d47481589def1bbb75eed7" kindref="member">casa_vencedora</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica__do__programa_8h_1acd1b2f5c71c17e023af74e3c678029a9" kindref="member">jogada_e_valida</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica__do__programa_8h_1ab2fb8cd7bf019ed1c45b7987033795dd" kindref="member">jogar</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//_GUIAO5_LOGICA_DO_PROGRAMA_H</highlight></codeline>
    </programlisting>
    <location file="logica_do_programa.h"/>
  </compounddef>
</doxygen>
