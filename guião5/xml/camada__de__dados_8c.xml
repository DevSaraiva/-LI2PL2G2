<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="camada__de__dados_8c" kind="file" language="C++">
    <compoundname>camada_de_dados.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="camada__de__dados_8h" local="yes">camada_de_dados.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>listas.h</label>
        <link refid="listas_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>camada_de_dados.c</label>
        <link refid="camada__de__dados_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>camada_de_dados.h</label>
        <link refid="camada__de__dados_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="camada__de__dados_8c_1a8199f21465a11af9c65688f72ceadaff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void limpa_tabuleiro</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>limpa_tabuleiro</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que coloca todas as casas do tabuleiro como vazias exepto a casa inicial. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="7" column="6" bodyfile="camada_de_dados.c" bodystart="7" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a59f994ca81b7ae54ecb349ae99b741d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void limpa_jogadas</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>limpa_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que atribui jogadas inválidas a todas as jogadas não efetuadas presentes na lista de jogadas. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="21" column="6" bodyfile="camada_de_dados.c" bodystart="21" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a40555aff97afc67bd1866f2785111310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA obter_ultima_jogada</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>obter_ultima_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que retorna a ultima jogada efetuada. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A última coordenada jogada </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="33" column="12" bodyfile="camada_de_dados.c" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a2f36f7634349620a18340ba7276aa601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_ultima_jogada</definition>
        <argsstring>(ESTADO *e, COORDENADA x)</argsstring>
        <name>set_ultima_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Função que define a ultima jogada efetuada. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="38" column="6" bodyfile="camada_de_dados.c" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1ad6e326e4ffa57ca1ae0c75377ecefc8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_jogador_atual</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>obter_jogador_atual</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
<para>Função que retorna o jogador que possui a vez de jogar. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Número do jogador atual (1 ou 2) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="43" column="5" bodyfile="camada_de_dados.c" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a35c87726f07cb6e89e088c9f2ada6ec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_jogador_atual</definition>
        <argsstring>(ESTADO *e, int x)</argsstring>
        <name>set_jogador_atual</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Função que define o jogador que possui a vez de jogar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="48" column="6" bodyfile="camada_de_dados.c" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a6faa68373203923729ed38657aa0f768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref></type>
        <definition>CASA obter_estado_casa</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>obter_estado_casa</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que obtém o estado de determinada casa localizada na coordenada passada. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>O estado da casa </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="53" column="6" bodyfile="camada_de_dados.c" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a60a461e722e8beb32647bed475481e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_estado_casa_c</definition>
        <argsstring>(ESTADO *e, COORDENADA c, CASA x)</argsstring>
        <name>set_estado_casa_c</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Função que define o estado de determinada casa localizada na coordenada passada. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="60" column="6" bodyfile="camada_de_dados.c" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1afe76af8f3d8d748148e9aebd7f68349e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_estado_casa</definition>
        <argsstring>(ESTADO *e, int linha, int coluna, CASA x)</argsstring>
        <name>set_estado_casa</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>linha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coluna</declname>
        </param>
        <param>
          <type><ref refid="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Define o estado da casa. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="66" column="6" bodyfile="camada_de_dados.c" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1abbfeab93575f20e5867482fd41a71cba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_numero_de_jogadas</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>obter_numero_de_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que devolve número de jogadas efetuadas até o momento. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Número de jogadas efetuadas </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="71" column="5" bodyfile="camada_de_dados.c" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a6488675aa725aba9817ddf7e4400f1ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_numero_de_jogadas</definition>
        <argsstring>(ESTADO *e, int x)</argsstring>
        <name>set_numero_de_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Função que define número de jogadas efetuadas até o momento. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="76" column="6" bodyfile="camada_de_dados.c" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a8ea2483c691783d59f493c9a779abdd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_jogada_indice</definition>
        <argsstring>(ESTADO *e, JOGADA x, int i)</argsstring>
        <name>set_jogada_indice</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structJOGADA" kindref="compound">JOGADA</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Função que define determinada jogada da lista de jogadas do estado. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="80" column="6" bodyfile="camada_de_dados.c" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a788fcf76b3701f0fdcf5db312132a9c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structJOGADA" kindref="compound">JOGADA</ref></type>
        <definition>JOGADA retorna_Jogada</definition>
        <argsstring>(ESTADO *e, int x)</argsstring>
        <name>retorna_Jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Função que retorna uma jogada de determinada posição na lista de jogadas. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A jogada selecionada </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="85" column="8" bodyfile="camada_de_dados.c" bodystart="85" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1abe4739995db5750e092e5d2cb13fef9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA obter_jogada_por_j</definition>
        <argsstring>(ESTADO *e, int i, int x)</argsstring>
        <name>obter_jogada_por_j</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Obtem as jogadas de um dado jogador. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Coordenada da jogada de um determinado jogador </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="91" column="12" bodyfile="camada_de_dados.c" bodystart="91" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a229893df34b1c4d70de18501c365ff13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_comando_pos</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>obter_comando_pos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que diz se o comando pos está ativo. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>O último comando pos usado </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="106" column="5" bodyfile="camada_de_dados.c" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1afd3a085c8db7800a35884a89b842893d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_comando_pos</definition>
        <argsstring>(ESTADO *e, int x)</argsstring>
        <name>set_comando_pos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Função define um comando pos. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="111" column="6" bodyfile="camada_de_dados.c" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a91f83ff370b2ee904584ac7b2a83e573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_valor_pos</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>obter_valor_pos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que diz qual o valor do comando pos. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>O valor do último comando pos usado </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="116" column="5" bodyfile="camada_de_dados.c" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a48e0ec2d6ce99bf5078a2b7e37b80a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_valor_pos</definition>
        <argsstring>(ESTADO *e, int x)</argsstring>
        <name>set_valor_pos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Função define o valor do comando pos. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="120" column="6" bodyfile="camada_de_dados.c" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1ad109f3e32f207e33bb2f4d43949e54a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_jogada</definition>
        <argsstring>(ESTADO *e, int i, int x)</argsstring>
        <name>set_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Define uma jogada daso um índice. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="124" column="6" bodyfile="camada_de_dados.c" bodystart="124" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a7e0c7e26fb685d9ab501e19b05e6954f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
        <definition>ESTADO* inicializar_estado</definition>
        <argsstring>()</argsstring>
        <name>inicializar_estado</name>
        <briefdescription>
<para>função que inicializa um estado </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>O ponteiro para o estado </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="132" column="8" bodyfile="camada_de_dados.c" bodystart="132" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="camada__de__dados_8h" kindref="compound">camada_de_dados.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a8199f21465a11af9c65688f72ceadaff" kindref="member">limpa_tabuleiro</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e){</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>8;<sp/>j++)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++){</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>tab[i][j]<sp/>=<sp/>VAZIO;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>tab<sp/>[4][4]<sp/>=<sp/>BRANCA;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a59f994ca81b7ae54ecb349ae99b741d5" kindref="member">limpa_jogadas</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++){</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>jogadas[i].jogador1.coluna<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>jogadas[i].jogador1.linha<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>jogadas[i].jogador2.coluna<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>jogadas[i].jogador2.linha<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="camada__de__dados_8h_1a40555aff97afc67bd1866f2785111310" kindref="member">obter_ultima_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>x<sp/>=<sp/>e<sp/>-&gt;<sp/>ultima_jogada;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a2f36f7634349620a18340ba7276aa601" kindref="member">set_ultima_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>x){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>ultima_jogada<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1ad6e326e4ffa57ca1ae0c75377ecefc8c" kindref="member">obter_jogador_atual</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>estado<sp/>-&gt;<sp/>jogador_atual;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a35c87726f07cb6e89e088c9f2ada6ec2" kindref="member">set_jogador_atual</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>jogador_atual<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref><sp/><ref refid="camada__de__dados_8h_1a6faa68373203923729ed38657aa0f768" kindref="member">obter_estado_casa</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coluna<sp/>=<sp/>c.coluna;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linha<sp/>=<sp/>c.linha;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref><sp/>x<sp/>=<sp/>e<sp/>-&gt;<sp/>tab[linha][coluna];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a60a461e722e8beb32647bed475481e25" kindref="member">set_estado_casa_c</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c,<ref refid="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref><sp/>x){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coluna<sp/>=<sp/>c.coluna;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linha<sp/>=<sp/>c.linha;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>tab[linha][coluna]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1afe76af8f3d8d748148e9aebd7f68349e" kindref="member">set_estado_casa</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linha,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coluna,<ref refid="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref><sp/>x){</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>tab[linha][coluna]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1abbfeab93575f20e5867482fd41a71cba" kindref="member">obter_numero_de_jogadas</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e){</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jog<sp/>=<sp/>e<sp/>-&gt;<sp/>num_jogadas;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jog;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a6488675aa725aba9817ddf7e4400f1ff" kindref="member">set_numero_de_jogadas</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;num_jogadas<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a8ea2483c691783d59f493c9a779abdd5" kindref="member">set_jogada_indice</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<ref refid="structJOGADA" kindref="compound">JOGADA</ref><sp/>x,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;jogadas[i]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="structJOGADA" kindref="compound">JOGADA</ref><sp/><ref refid="camada__de__dados_8h_1a788fcf76b3701f0fdcf5db312132a9c1" kindref="member">retorna_Jogada</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structJOGADA" kindref="compound">JOGADA</ref><sp/>jog<sp/>=<sp/>e<sp/>-&gt;<sp/>jogadas[x];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jog;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="camada__de__dados_8h_1abe4739995db5750e092e5d2cb13fef9f" kindref="member">obter_jogada_por_j</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncoluna1<sp/>=<sp/>e-&gt;jogadas[i].jogador1.coluna;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlinha1<sp/>=<sp/>e-&gt;jogadas[i].jogador1.linha;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>j1<sp/>=<sp/>{ncoluna1,nlinha1};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>j1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncoluna<sp/>=<sp/>e-&gt;jogadas[i].jogador2.coluna;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlinha<sp/>=<sp/>e-&gt;jogadas[i].jogador2.linha;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>j2<sp/>=<sp/>{ncoluna,nlinha};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>j2;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a229893df34b1c4d70de18501c365ff13" kindref="member">obter_comando_pos</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/><sp/>e<sp/>-&gt;<sp/>ultimo_comando_pos;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1afd3a085c8db7800a35884a89b842893d" kindref="member">set_comando_pos</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;ultimo_comando_pos<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a91f83ff370b2ee904584ac7b2a83e573" kindref="member">obter_valor_pos</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>e-&gt;valor_pos;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a48e0ec2d6ce99bf5078a2b7e37b80a71" kindref="member">set_valor_pos</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;valor_pos=x;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1ad109f3e32f207e33bb2f4d43949e54a5" kindref="member">set_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;jogadas[i].jogador1.coluna<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;jogadas[i].jogador1.linha<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;jogadas[i].jogador2.coluna<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;jogadas[i].jogador2.linha<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<ref refid="camada__de__dados_8h_1a7e0c7e26fb685d9ab501e19b05e6954f" kindref="member">inicializar_estado</ref>()<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e<sp/>=<sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structESTADO" kindref="compound">ESTADO</ref>));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>jogador_atual<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>num_jogadas<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>ultima_jogada.linha<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>ultima_jogada.coluna<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1a8199f21465a11af9c65688f72ceadaff" kindref="member">limpa_tabuleiro</ref>(e);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1a59f994ca81b7ae54ecb349ae99b741d5" kindref="member">limpa_jogadas</ref>(e);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>ultimo_comando_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>-&gt;<sp/>valor_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="camada_de_dados.c"/>
  </compounddef>
</doxygen>
